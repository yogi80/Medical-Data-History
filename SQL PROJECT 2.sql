USE `project_medical_data_history`;

SELECT * FROM project_medical_data_history.patients;

## Q-1 FIRST NAME , LAST NAME AND GENDER OF PATIENTS WHO'S GENDER IS "M"


SELECT first_name,last_name,gender
FROM patients
WHERE gender = 'M';


## Q-2 FIRST NAME AND LAST NAME OF PATIENTS WHO DOES NOT HAVE ALLERGIES



SELECT first_name,last_name, CONCAT(first_name, '',last_name) AS full_name,allergies
FROM patients
WHERE allergies IS NULL;



## Q-3 FIRST NAME OF PATIENTS THAT START WITH THE LETTER 'C'


SELECT first_name
FROM patients
WHERE first_name LIKE 'C';



## Q-4 SHOW FIRST NAME AND LAST NAME OF PATIENTS THAT WEIGHT WITHIN THE RANGE OF 100 TO 120


SELECT CONCAT(first_name,'  ',last_name) AS full_name,weight
FROM patients
WHERE weight BETWEEN 100 AND 120;


## Q-5 UPDATE PATIENTS TABLE ALLERGIES COLUMN IF THE PATIENTS ALLERGIES IS NULL THEN REPLACE IT WITH  'NKA'


SELECT patient_id,first_name,
CASE 
	    WHEN allergies IS NULL THEN 'NKA'
        ELSE allergies
END AS allergies

FROM patients;


## Q-6 FIRST NAME AND LAST NAME CONCATENATED INTO ONE COLUMN TO SHOW THEIR FULL NAME


SELECT CONCAT(first_name, '  ',last_name) AS full_name
FROM patients;



## Q-7  FIRST NAME ,LAST NAME  AND THE FULL PROVIENCE NAME OF EACH PATIENT



SELECT
    p.first_name,
    p.last_name,
    pn.province_name AS full_province_name
FROM
    patients p
JOIN
    province_names pn ON p.province_id = pn.province_id;
    
    
## Q-8 SHOW HOW MANY PATIENTS HAVE A BIRTH DATE WITH 2010 AS THE BIRTH YEAR

SELECT COUNT(*) AS total_patients_with_birth_year_2010
FROM patients
WHERE(birth_date) =2010;



##Q-9 SHOW THE FIRST NAME ,LAST NAME AND HEIGHT OF PATIENT WITH THE GREATEST HEIGHT


SELECT first_name,last_name,height
FROM patients
WHERE 
height = (SELECT MAX(height) FROM patients);



## Q-10 SHOW ALL COLUMNS FOR PATIENTS WHO HAVE ONE OF THE FOLLOWING PATIENTS_IDS : 1,45,534,879,1000



SELECT * FROM patients
WHERE patient_id IN (1,45,534,879,1000);



## Q-11 SHOW THE TOTAL NUMBER OF ADMISSION


SELECT COUNT(*) AS total_admission
FROM admissions;



## Q-12 SHOW THE ALL COLUMNS OF ADMISSIONS WHERE THE PATIENTS WAS ADMITTES AND DISCHARGED ON THE SAME DAY



SELECT * FROM admissions
WHERE DATE(admission_date) = DATE(discharge_date);




## Q-13 SHOW THE TOTAL NUMBER OF ADMISSION FOR PATIENTS_ID 579


SELECT COUNT(*) AS toal_admissions
FROM admissions
WHERE patient_id = 579;




## Q-14  BASED ON THE CITIES THAT OUR PATIENTS LIVE IN SHOW UNIQUE CITIES THAT ARE IN PROVINCE_ID 'NS'?


SELECT DISTINCT CITY
FROM patients
WHERE province_id = 'NS';




## Q-15 WRITE A QUERY TO FIND THE FIEST_NAME,LAST_NAME AND BIRTH DATE OF PATIENTS WHO HAVE HEIGHT MORE THAN 160 AND WEIGHT MORE THAN 70


SELECT first_name,last_name,birth_date
FROM patients
WHERE height>160 AND weight>70;




## Q-16 SHOW UNIQUE BIRTH YEARS FROM PATIENTS AND ORDER THEM BY ASCENDING 



SELECT DISTINCT YEAR (birth_date) AS birth_year
FROM patients
ORDER BY birth_year ASC;



## q-17 SHOW UNIQUE FIRST NAMES FROM PATIENTS TABLE WHICH ONLY OCCURS ONCE IN THE LIST



SELECT first_name
FROM patients
GROUP BY first_name
HAVING COUNT(first_name) =1;



## Q -18 SHOW PATIENTS_ID,AND FIRST_NAME FORM PATIENTS WHERE THEIR FIRST_NAME STARTS AND ENDS WITH 'S' AND IS AT LEAST 6 CHARACTERS LONG



SELECT patient_id, first_name
FROM patients
WHERE
    LENGTH(first_name) >= 6
    AND LEFT(first_name, 1) = 's'
    AND RIGHT(first_name, 1) = 's';
    
    
    
## Q-19 SHOW PATIENTS_ID, fIRST_NAME,LAST_NAME FROM PATIENTS WHOS DIAGNOSIS IS 'DEMENTIA' PRIMARY  DIAGNOSIS IS STORED IN THE ADMISSION TABLE



SELECT p.patient_id, p.first_name, p.last_name
FROM patients p
JOIN admissions a ON p.patient_id = a.patient_id
WHERE diagnosis = 'Dementia';




## Q-20 DISPLAY EVERY PATIENTS FIRST NAME ORDER THE LIST BY THE LENGTH OF EACH NAME AND THEN BY ALPHABETICALLY



SELECT first_name
FROM patients
ORDER BY length(first_name),first_name;



## Q-21 SHOW THE TOTAL AMOUNT OF MAIL PATIENTS AND THE TOTAL AMOUNT OF FEMALE PATIENTS IN THE PATIENTS TABLE DISPLAY TWO RESULT IN THE SAME ROW




SELECT
SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS total_male_patients,
SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS total_female_patients

FROM patients;



##Q-23 SHOW PATIENTS ID ,DIAGNOSIS FROM ADMISSION FIND PATIENTS ADMITTED MULTIPLE TIMES FOR THE SAME DIAGNOSIS



SELECT patient_id,diagnosis
FROM admissions
GROUP BY patient_id,diagnosis
HAVING COUNT(*)>1;



## Q-24 SHOW THE CITY AND THE TOTAL NUMBER OF PATIENTS IN THE CITY. ORDER FROM MOST TO LEAST PATIENTS AND THEN BY CITY NAME ASC


SELECT city, COUNT(patient_id) AS total_patients
FROM patients
GROUP BY city
ORDER BY total_patients DESC, city ASC;



## Q-25 SHOW FIRST NAME, LAST NAME AND ROLE OF EVERY PERSON THAT IS EITHER PATIENTS OR DOCTOR. THE ROLES ARE EITHER "PATIENTS" OR "DOCTOR"



SELECT first_name, last_name, 'Patient' AS role
FROM patients
UNION
SELECT first_name, last_name, 'Doctor' AS role
FROM doctors;



## Q-26 SHOW ALL ALLERGIES ORDERED BY POPULARITY REMOVE NULL VALUES 

SELECT allergies , COUNT(*) AS POPULARITY
FROM patients
WHERE allergies IS NOT NULL
GROUP BY allergies
ORDER BY POPULARITY DESC;




## Q-27 SHOW ALL PATIENTS FIRST_NAMES,lAST_NAMES AND BIRTH_DATE WHO WERE BORN IN 1970S DECADE SORT THE LIST STARTING FROM THE EARLIEST BIRTHDATE



SELECT first_name,last_name,birth_date
FROM patients
WHERE YEAR(birth_date)=1970
ORDER BY birth_date;



## Q-28 










## Q-28 DISPLAY EACH PATIENTS'S FULL NAME IN A SINGLE COLUMN THEIR LAST NAME IN ALL UPPER LETTERS MUST APPEAR FIRST THEN FIRST NAME IN ALL LOWWER CASE LETTERS SEPERATE THE FIRST NAME AND LAST NAME WITH A COMMA ORDER THE LIST BY THE FIRST NAME IN DSC ORDER EX - SMITH,JANE



SELECT CONCAT(UPPER(last_name), ',', LOWER(first_name)) AS FULL_NAME
FROM patients
ORDER BY first_name DESC;



## Q-29 SHOW THE PORVINCE ID(S) SUM OF THE HEIGHT WHERE SUM OF ITS PATIENTS TOTAL HEIGHT IS GREATER THAN OR EQUAL TO 7000

SELECT province_id, SUM(height) AS TOTAL_HEIGHT
FROM patients
GROUP BY province_id
HAVING TOTAL_HEIGHT >=7000;



## Q-30 SHOW THE DIFFRENCE BETWEEN THE LARGEST WEIGHT AND THE SMALLEST WEIGHT FOR PATIENTS WITH THE LAST NAME 'MARONI'


SELECT MAX(weight) - MIN(weight) AS WEIGHT_DIFFRENCE
FROM patients
WHERE last_name = 'Maroni';




## QQ-31 SHOW ALL OF THE DAYS OF THE MONTH (1-31) AND HOW MANY ADMISSION _DATES OCCURED ON THAT DAY .SORT BY THE DAY WITH MOST ADMISSION TO LEAST ADMISSIONS



SELECT DAY(admission_date) AS day_of_month, COUNT(*) AS admissions_count
FROM admissions
GROUP BY DAY(admission_date)
ORDER BY admissions_count DESC, day_of_month;



## Q-32 SHOW ALL OF THE PATIENTS GROUPED INTO WEIGHT GROUPS .SHOW THOTAL AMOUNT OF PATIENTS IN EACH WEIGHT GROUP. ORDER THE LIST BY WEIGHT GROUP DESC E.G. IF THEY WEIGHT 100 TO 109 THEY ARE PLACED IN THE 100 WEIGHT GROUP 110-119=110 WEIGHT GROUP ,ETC



SELECT 
 CASE
           
            WHEN weight BETWEEN 100 AND 109 THEN '100 WEIGHT GROUP'
            WHEN WEIGHT BETWEEN 110 AND 119 THEN '110 WEIGHT GROUP'
			ELSE 'OTHER WWEIGHT GROUP'
	END AS WEIGHT_GROUP,
    
    COUNT(patient_id) AS TOTAL_PATIENTS
       
FROM
	   patients
       
GROUP BY 
        WEIGHT_GROUP
        
ORDER BY 
        WEIGHT_GROUP DESC;
        
        
        
## Q-33 SHOW PATIENTS ID ,WEIGHT, HEIGHT , IS OBESE FROM THE PATIENTS TABLE DISPLAY ISOBESE AS A BOOLEAN 0 OR 1 OBESE IS DEFINED AS A WEIGHT(KG)/HEIGHT(M). WEIGHT IS IN UNITED KG ,HEIGHT IS IN UNIT CM.



SELECT
  patient_id,
  weight,
  height,
  CASE WHEN (weight / (height / 100)^2) > 30 THEN 1 ELSE 0 END AS isObese
FROM
  patients;
  
  
  
## Q-34  SHOW PATIENTS ID ,FIRST NAME,LAST NAME AND ATTENDING DOCTOR SPECIALITY SHOW ONLY THE PATIENTS WHO HAS A DIAGNOSIS AS 'EPILEPSY' AND THE DOCTOR FIRST NAME IS 'LISA'. CHECK PATOENTS ADMISSION AND DOCTOR TABLE FOR REQUIRED INFORMATION



SELECT
  p.patient_id,
  p.first_name,
  p.last_name,
  d.specialty AS doctor_specialty
FROM
  patients p
JOIN
  admissions a ON p.patient_id = a.patient_id
JOIN
  doctors d ON a.attending_doctor_id = d.doctor_id
WHERE
  a.diagnosis = 'Epilepsy' AND
  d.first_name = 'Lisa'
LIMIT 0, 50000;



## Q-35 ALL PATIENTS WHO HAVE GONE THROUGH ADMISSIONS, CAN SEE THEIR MEDICAL DOCUMENTS ON OUR SITE THOSE PATIENTS ARE GIVEN A TEPORARY PASSWORD AFTER THEIR FIRST ADMISSION SHOW THE PATIENTS ID AND TEMPORARY PASSWORD

SELECT
       patient_id,
       concat(
       patient_id,
       LENGTH(last_name),
       YEAR(birth_date)
       ) AS TEMP_PASSWORD
FROM
     patients
WHERE
    patient_id IN (SELECT DISTINCT patient_id FROM admissions);




        










 



